// Code generated by "stringer -type=RuleId -linecomment rule_ids.go"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[pruneDropTablesId-16]
	_ = x[setTargetSchemasId-17]
	_ = x[resolveCreateLikeId-18]
	_ = x[parseColumnDefaultsId-19]
	_ = x[resolveDropConstraintId-20]
	_ = x[validateDropConstraintId-21]
	_ = x[loadCheckConstraintsId-22]
	_ = x[assignCatalogId-23]
	_ = x[resolveAnalyzeTablesId-24]
	_ = x[resolveCreateSelectId-25]
	_ = x[resolveSubqueriesId-26]
	_ = x[setViewTargetSchemaId-27]
	_ = x[resolveUnionsId-28]
	_ = x[resolveDescribeQueryId-29]
	_ = x[checkUniqueTableNamesId-30]
	_ = x[resolveTableFunctionsId-31]
	_ = x[resolveDeclarationsId-32]
	_ = x[resolveColumnDefaultsId-33]
	_ = x[validateColumnDefaultsId-34]
	_ = x[validateCreateTriggerId-35]
	_ = x[validateCreateProcedureId-36]
	_ = x[resolveCreateProcedureId-37]
	_ = x[loadInfoSchemaId-38]
	_ = x[validateReadOnlyDatabaseId-39]
	_ = x[validateReadOnlyTransactionId-40]
	_ = x[validateDatabaseSetId-41]
	_ = x[validatePrivilegesId-42]
	_ = x[reresolveTablesId-43]
	_ = x[setInsertColumnsId-44]
	_ = x[validateJoinComplexityId-45]
	_ = x[applyBinlogReplicaControllerId-46]
	_ = x[resolveUsingJoinsId-47]
	_ = x[resolveOrderbyLiteralsId-48]
	_ = x[resolveFunctionsId-49]
	_ = x[flattenTableAliasesId-50]
	_ = x[pushdownSortId-51]
	_ = x[pushdownGroupbyAliasesId-52]
	_ = x[pushdownSubqueryAliasFiltersId-53]
	_ = x[qualifyColumnsId-54]
	_ = x[resolveColumnsId-55]
	_ = x[validateCheckConstraintId-56]
	_ = x[resolveBarewordSetVariablesId-57]
	_ = x[replaceCountStarId-58]
	_ = x[expandStarsId-59]
	_ = x[transposeRightJoinsId-60]
	_ = x[resolveHavingId-61]
	_ = x[mergeUnionSchemasId-62]
	_ = x[flattenAggregationExprsId-63]
	_ = x[reorderProjectionId-64]
	_ = x[resolveSubqueryExprsId-65]
	_ = x[replaceCrossJoinsId-66]
	_ = x[moveJoinCondsToFilterId-67]
	_ = x[evalFilterId-68]
	_ = x[optimizeDistinctId-69]
	_ = x[hoistOutOfScopeFiltersId-70]
	_ = x[transformJoinApplyId-71]
	_ = x[hoistSelectExistsId-72]
	_ = x[finalizeSubqueriesId-73]
	_ = x[finalizeUnionsId-74]
	_ = x[loadTriggersId-75]
	_ = x[loadEventsId-76]
	_ = x[processTruncateId-77]
	_ = x[resolveAlterColumnId-78]
	_ = x[resolveGeneratorsId-79]
	_ = x[removeUnnecessaryConvertsId-80]
	_ = x[pruneColumnsId-81]
	_ = x[stripTableNameInDefaultsId-82]
	_ = x[foldEmptyJoinsId-83]
	_ = x[optimizeJoinsId-84]
	_ = x[generateIndexScansId-85]
	_ = x[matchAgainstId-86]
	_ = x[pushFiltersId-87]
	_ = x[subqueryIndexesId-88]
	_ = x[pruneTablesId-89]
	_ = x[fixupAuxiliaryExprsId-90]
	_ = x[inlineSubqueryAliasRefsId-91]
	_ = x[setJoinScopeLenId-92]
	_ = x[eraseProjectionId-93]
	_ = x[replaceSortPkId-94]
	_ = x[insertTopNId-95]
	_ = x[applyHashInId-96]
	_ = x[resolveInsertRowsId-97]
	_ = x[resolvePreparedInsertId-98]
	_ = x[applyTriggersId-99]
	_ = x[applyProceduresId-100]
	_ = x[assignRoutinesId-101]
	_ = x[modifyUpdateExprsForJoinId-102]
	_ = x[applyRowUpdateAccumulatorsId-103]
	_ = x[wrapWithRollbackId-104]
	_ = x[applyFKsId-105]
	_ = x[validateResolvedId-106]
	_ = x[validateOrderById-107]
	_ = x[validateGroupById-108]
	_ = x[validateSchemaSourceId-109]
	_ = x[validateIndexCreationId-110]
	_ = x[validateOperandsId-111]
	_ = x[validateCaseResultTypesId-112]
	_ = x[validateIntervalUsageId-113]
	_ = x[validateExplodeUsageId-114]
	_ = x[validateSubqueryColumnsId-115]
	_ = x[validateUnionSchemasMatchId-116]
	_ = x[validateAggregationsId-117]
	_ = x[validateDeleteFromId-118]
	_ = x[cacheSubqueryResultsId-119]
	_ = x[cacheSubqueryAliasesInJoinsId-120]
	_ = x[AutocommitId-121]
	_ = x[TrackProcessId-122]
	_ = x[parallelizeId-123]
	_ = x[clearWarningsId-124]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScansmatchAgainstpushFilterssubqueryIndexespruneTablesfixupAuxiliaryExprsinlineSubqueryAliasRefssetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 286, 302, 319, 338, 359, 381, 401, 414, 434, 453, 470, 489, 502, 522, 543, 564, 583, 604, 626, 647, 670, 692, 706, 730, 757, 776, 794, 809, 825, 847, 875, 894, 913, 935, 951, 970, 982, 1004, 1032, 1046, 1060, 1083, 1110, 1126, 1137, 1156, 1169, 1186, 1209, 1226, 1246, 1263, 1284, 1294, 1310, 1332, 1350, 1367, 1385, 1399, 1411, 1421, 1436, 1454, 1471, 1496, 1508, 1541, 1555, 1568, 1586, 1598, 1609, 1624, 1635, 1654, 1677, 1692, 1707, 1720, 1730, 1741, 1758, 1779, 1792, 1807, 1821, 1845, 1871, 1888, 1896, 1912, 1927, 1942, 1962, 1983, 1999, 2022, 2043, 2063, 2086, 2111, 2131, 2149, 2169, 2196, 2213, 2225, 2236, 2249}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
