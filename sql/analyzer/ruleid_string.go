// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[pruneDropTablesId-16]
	_ = x[setTargetSchemasId-17]
	_ = x[resolveCreateLikeId-18]
	_ = x[parseColumnDefaultsId-19]
	_ = x[resolveDropConstraintId-20]
	_ = x[validateDropConstraintId-21]
	_ = x[loadCheckConstraintsId-22]
	_ = x[assignCatalogId-23]
	_ = x[resolveAnalyzeTablesId-24]
	_ = x[resolveCreateSelectId-25]
	_ = x[resolveSubqueriesId-26]
	_ = x[setViewTargetSchemaId-27]
	_ = x[resolveUnionsId-28]
	_ = x[resolveDescribeQueryId-29]
	_ = x[checkUniqueTableNamesId-30]
	_ = x[disambiguateTableFunctionsId-31]
	_ = x[resolveTableFunctionsId-32]
	_ = x[resolveDeclarationsId-33]
	_ = x[resolveColumnDefaultsId-34]
	_ = x[validateColumnDefaultsId-35]
	_ = x[validateCreateTriggerId-36]
	_ = x[validateCreateProcedureId-37]
	_ = x[resolveCreateProcedureId-38]
	_ = x[loadInfoSchemaId-39]
	_ = x[validateReadOnlyDatabaseId-40]
	_ = x[validateReadOnlyTransactionId-41]
	_ = x[validateDatabaseSetId-42]
	_ = x[validatePrivilegesId-43]
	_ = x[reresolveTablesId-44]
	_ = x[setInsertColumnsId-45]
	_ = x[validateJoinComplexityId-46]
	_ = x[applyBinlogReplicaControllerId-47]
	_ = x[applyEventSchedulerNotifierId-48]
	_ = x[resolveNaturalJoinsId-49]
	_ = x[resolveOrderbyLiteralsId-50]
	_ = x[resolveFunctionsId-51]
	_ = x[flattenTableAliasesId-52]
	_ = x[pushdownSortId-53]
	_ = x[pushdownGroupbyAliasesId-54]
	_ = x[pushdownSubqueryAliasFiltersId-55]
	_ = x[qualifyColumnsId-56]
	_ = x[resolveColumnsId-57]
	_ = x[validateCheckConstraintId-58]
	_ = x[resolveBarewordSetVariablesId-59]
	_ = x[replaceCountStarId-60]
	_ = x[expandStarsId-61]
	_ = x[transposeRightJoinsId-62]
	_ = x[resolveHavingId-63]
	_ = x[mergeUnionSchemasId-64]
	_ = x[flattenAggregationExprsId-65]
	_ = x[reorderProjectionId-66]
	_ = x[resolveSubqueryExprsId-67]
	_ = x[replaceCrossJoinsId-68]
	_ = x[moveJoinCondsToFilterId-69]
	_ = x[evalFilterId-70]
	_ = x[optimizeDistinctId-71]
	_ = x[hoistOutOfScopeFiltersId-72]
	_ = x[transformJoinApplyId-73]
	_ = x[hoistSelectExistsId-74]
	_ = x[finalizeSubqueriesId-75]
	_ = x[finalizeUnionsId-76]
	_ = x[loadTriggersId-77]
	_ = x[loadEventsId-78]
	_ = x[processTruncateId-79]
	_ = x[resolveAlterColumnId-80]
	_ = x[resolveGeneratorsId-81]
	_ = x[removeUnnecessaryConvertsId-82]
	_ = x[pruneColumnsId-83]
	_ = x[stripTableNameInDefaultsId-84]
	_ = x[foldEmptyJoinsId-85]
	_ = x[optimizeJoinsId-86]
	_ = x[pushdownFiltersId-87]
	_ = x[subqueryIndexesId-88]
	_ = x[pruneTablesId-89]
	_ = x[fixupAuxiliaryExprsId-90]
	_ = x[setJoinScopeLenId-91]
	_ = x[eraseProjectionId-92]
	_ = x[replaceSortPkId-93]
	_ = x[insertTopNId-94]
	_ = x[applyHashInId-95]
	_ = x[resolveInsertRowsId-96]
	_ = x[resolvePreparedInsertId-97]
	_ = x[applyTriggersId-98]
	_ = x[applyProceduresId-99]
	_ = x[assignRoutinesId-100]
	_ = x[modifyUpdateExprsForJoinId-101]
	_ = x[applyRowUpdateAccumulatorsId-102]
	_ = x[wrapWithRollbackId-103]
	_ = x[applyFKsId-104]
	_ = x[validateResolvedId-105]
	_ = x[validateOrderById-106]
	_ = x[validateGroupById-107]
	_ = x[validateSchemaSourceId-108]
	_ = x[validateIndexCreationId-109]
	_ = x[validateOperandsId-110]
	_ = x[validateCaseResultTypesId-111]
	_ = x[validateIntervalUsageId-112]
	_ = x[validateExplodeUsageId-113]
	_ = x[validateSubqueryColumnsId-114]
	_ = x[validateUnionSchemasMatchId-115]
	_ = x[validateAggregationsId-116]
	_ = x[validateDeleteFromId-117]
	_ = x[cacheSubqueryResultsId-118]
	_ = x[cacheSubqueryAliasesInJoinsId-119]
	_ = x[AutocommitId-120]
	_ = x[TrackProcessId-121]
	_ = x[parallelizeId-122]
	_ = x[clearWarningsId-123]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesdisambiguateTableFunctionsresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerNotifierresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinspushdownFilterssubqueryIndexespruneTablesfixupAuxiliaryExprssetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 286, 302, 319, 338, 359, 381, 401, 414, 434, 453, 470, 489, 502, 522, 543, 569, 590, 609, 630, 652, 673, 696, 718, 732, 756, 783, 802, 820, 835, 851, 873, 901, 928, 947, 969, 985, 1004, 1016, 1038, 1066, 1080, 1094, 1117, 1144, 1160, 1171, 1190, 1203, 1220, 1243, 1260, 1280, 1297, 1318, 1328, 1344, 1366, 1384, 1401, 1419, 1433, 1445, 1455, 1470, 1488, 1505, 1530, 1542, 1575, 1589, 1602, 1617, 1632, 1643, 1662, 1677, 1692, 1705, 1715, 1726, 1743, 1764, 1777, 1792, 1806, 1830, 1856, 1873, 1881, 1897, 1912, 1927, 1947, 1968, 1984, 2007, 2028, 2048, 2071, 2096, 2116, 2134, 2154, 2181, 2198, 2210, 2221, 2234}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
