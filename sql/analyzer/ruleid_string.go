// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[pruneDropTablesId-16]
	_ = x[setTargetSchemasId-17]
	_ = x[resolveCreateLikeId-18]
	_ = x[parseColumnDefaultsId-19]
	_ = x[resolveDropConstraintId-20]
	_ = x[validateDropConstraintId-21]
	_ = x[loadCheckConstraintsId-22]
	_ = x[assignCatalogId-23]
	_ = x[resolveAnalyzeTablesId-24]
	_ = x[resolveCreateSelectId-25]
	_ = x[resolveSubqueriesId-26]
	_ = x[setViewTargetSchemaId-27]
	_ = x[resolveUnionsId-28]
	_ = x[resolveDescribeQueryId-29]
	_ = x[checkUniqueTableNamesId-30]
	_ = x[resolveTableFunctionsId-31]
	_ = x[resolveDeclarationsId-32]
	_ = x[resolveColumnDefaultsId-33]
	_ = x[validateColumnDefaultsId-34]
	_ = x[validateCreateTriggerId-35]
	_ = x[validateCreateProcedureId-36]
	_ = x[resolveCreateProcedureId-37]
	_ = x[loadInfoSchemaId-38]
	_ = x[validateReadOnlyDatabaseId-39]
	_ = x[validateReadOnlyTransactionId-40]
	_ = x[validateDatabaseSetId-41]
	_ = x[validatePrivilegesId-42]
	_ = x[reresolveTablesId-43]
	_ = x[setInsertColumnsId-44]
	_ = x[validateJoinComplexityId-45]
	_ = x[applyBinlogReplicaControllerId-46]
	_ = x[applyEventSchedulerId-47]
	_ = x[resolveNaturalJoinsId-48]
	_ = x[resolveOrderbyLiteralsId-49]
	_ = x[resolveFunctionsId-50]
	_ = x[flattenTableAliasesId-51]
	_ = x[pushdownSortId-52]
	_ = x[pushdownGroupbyAliasesId-53]
	_ = x[pushdownSubqueryAliasFiltersId-54]
	_ = x[qualifyColumnsId-55]
	_ = x[resolveColumnsId-56]
	_ = x[validateCheckConstraintId-57]
	_ = x[resolveBarewordSetVariablesId-58]
	_ = x[replaceCountStarId-59]
	_ = x[expandStarsId-60]
	_ = x[transposeRightJoinsId-61]
	_ = x[resolveHavingId-62]
	_ = x[mergeUnionSchemasId-63]
	_ = x[flattenAggregationExprsId-64]
	_ = x[reorderProjectionId-65]
	_ = x[resolveSubqueryExprsId-66]
	_ = x[replaceCrossJoinsId-67]
	_ = x[moveJoinCondsToFilterId-68]
	_ = x[evalFilterId-69]
	_ = x[optimizeDistinctId-70]
	_ = x[hoistOutOfScopeFiltersId-71]
	_ = x[transformJoinApplyId-72]
	_ = x[hoistSelectExistsId-73]
	_ = x[finalizeSubqueriesId-74]
	_ = x[finalizeUnionsId-75]
	_ = x[loadTriggersId-76]
	_ = x[loadEventsId-77]
	_ = x[processTruncateId-78]
	_ = x[resolveAlterColumnId-79]
	_ = x[resolveGeneratorsId-80]
	_ = x[removeUnnecessaryConvertsId-81]
	_ = x[pruneColumnsId-82]
	_ = x[stripTableNameInDefaultsId-83]
	_ = x[foldEmptyJoinsId-84]
	_ = x[optimizeJoinsId-85]
	_ = x[generateIndexScansId-86]
	_ = x[pushFiltersId-87]
	_ = x[subqueryIndexesId-88]
	_ = x[pruneTablesId-89]
	_ = x[fixupAuxiliaryExprsId-90]
	_ = x[setJoinScopeLenId-91]
	_ = x[eraseProjectionId-92]
	_ = x[replaceSortPkId-93]
	_ = x[insertTopNId-94]
	_ = x[applyHashInId-95]
	_ = x[resolveInsertRowsId-96]
	_ = x[resolvePreparedInsertId-97]
	_ = x[applyTriggersId-98]
	_ = x[applyProceduresId-99]
	_ = x[assignRoutinesId-100]
	_ = x[modifyUpdateExprsForJoinId-101]
	_ = x[applyRowUpdateAccumulatorsId-102]
	_ = x[wrapWithRollbackId-103]
	_ = x[applyFKsId-104]
	_ = x[validateResolvedId-105]
	_ = x[validateOrderById-106]
	_ = x[validateGroupById-107]
	_ = x[validateSchemaSourceId-108]
	_ = x[validateIndexCreationId-109]
	_ = x[validateOperandsId-110]
	_ = x[validateCaseResultTypesId-111]
	_ = x[validateIntervalUsageId-112]
	_ = x[validateExplodeUsageId-113]
	_ = x[validateSubqueryColumnsId-114]
	_ = x[validateUnionSchemasMatchId-115]
	_ = x[validateAggregationsId-116]
	_ = x[validateDeleteFromId-117]
	_ = x[cacheSubqueryResultsId-118]
	_ = x[cacheSubqueryAliasesInJoinsId-119]
	_ = x[AutocommitId-120]
	_ = x[TrackProcessId-121]
	_ = x[parallelizeId-122]
	_ = x[clearWarningsId-123]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureresolveCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerapplyEventSchedulerNotifierresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinsgenerateIndexScanspushFilterssubqueryIndexespruneTablesfixupAuxiliaryExprssetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 286, 302, 319, 338, 359, 381, 401, 414, 434, 453, 470, 489, 502, 522, 543, 564, 583, 604, 626, 647, 670, 692, 706, 730, 757, 776, 794, 809, 825, 847, 875, 902, 921, 943, 959, 978, 990, 1012, 1040, 1054, 1068, 1091, 1118, 1134, 1145, 1164, 1177, 1194, 1217, 1234, 1254, 1271, 1292, 1302, 1318, 1340, 1358, 1375, 1393, 1407, 1419, 1429, 1444, 1462, 1479, 1504, 1516, 1549, 1563, 1576, 1594, 1605, 1620, 1631, 1650, 1665, 1680, 1693, 1703, 1714, 1731, 1752, 1765, 1780, 1794, 1818, 1844, 1861, 1869, 1885, 1900, 1915, 1935, 1956, 1972, 1995, 2016, 2036, 2059, 2084, 2104, 2122, 2142, 2169, 2186, 2198, 2209, 2222}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
