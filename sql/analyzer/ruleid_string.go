// Code generated by "stringer -type=RuleId -linecomment"; DO NOT EDIT.

package analyzer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[applyDefaultSelectLimitId-0]
	_ = x[validateOffsetAndLimitId-1]
	_ = x[validateStarExpressionsId-2]
	_ = x[validateCreateTableId-3]
	_ = x[validateExprSemId-4]
	_ = x[resolveVariablesId-5]
	_ = x[resolveNamedWindowsId-6]
	_ = x[resolveSetVariablesId-7]
	_ = x[resolveViewsId-8]
	_ = x[liftCtesId-9]
	_ = x[resolveCtesId-10]
	_ = x[liftRecursiveCtesId-11]
	_ = x[resolveDatabasesId-12]
	_ = x[resolveTablesId-13]
	_ = x[loadStoredProceduresId-14]
	_ = x[validateDropTablesId-15]
	_ = x[pruneDropTablesId-16]
	_ = x[setTargetSchemasId-17]
	_ = x[resolveCreateLikeId-18]
	_ = x[parseColumnDefaultsId-19]
	_ = x[resolveDropConstraintId-20]
	_ = x[validateDropConstraintId-21]
	_ = x[loadCheckConstraintsId-22]
	_ = x[assignCatalogId-23]
	_ = x[resolveAnalyzeTablesId-24]
	_ = x[resolveCreateSelectId-25]
	_ = x[resolveSubqueriesId-26]
	_ = x[setViewTargetSchemaId-27]
	_ = x[resolveUnionsId-28]
	_ = x[resolveDescribeQueryId-29]
	_ = x[checkUniqueTableNamesId-30]
	_ = x[disambiguateTableFunctionsId-31]
	_ = x[resolveTableFunctionsId-32]
	_ = x[resolveDeclarationsId-33]
	_ = x[resolveColumnDefaultsId-34]
	_ = x[validateColumnDefaultsId-35]
	_ = x[validateCreateTriggerId-36]
	_ = x[validateCreateProcedureId-37]
	_ = x[loadInfoSchemaId-38]
	_ = x[validateReadOnlyDatabaseId-39]
	_ = x[validateReadOnlyTransactionId-40]
	_ = x[validateDatabaseSetId-41]
	_ = x[validatePrivilegesId-42]
	_ = x[reresolveTablesId-43]
	_ = x[setInsertColumnsId-44]
	_ = x[validateJoinComplexityId-45]
	_ = x[applyBinlogReplicaControllerId-46]
	_ = x[resolveNaturalJoinsId-47]
	_ = x[resolveOrderbyLiteralsId-48]
	_ = x[resolveFunctionsId-49]
	_ = x[flattenTableAliasesId-50]
	_ = x[pushdownSortId-51]
	_ = x[pushdownGroupbyAliasesId-52]
	_ = x[pushdownSubqueryAliasFiltersId-53]
	_ = x[qualifyColumnsId-54]
	_ = x[resolveColumnsId-55]
	_ = x[validateCheckConstraintId-56]
	_ = x[resolveBarewordSetVariablesId-57]
	_ = x[replaceCountStarId-58]
	_ = x[expandStarsId-59]
	_ = x[transposeRightJoinsId-60]
	_ = x[resolveHavingId-61]
	_ = x[mergeUnionSchemasId-62]
	_ = x[flattenAggregationExprsId-63]
	_ = x[reorderProjectionId-64]
	_ = x[resolveSubqueryExprsId-65]
	_ = x[replaceCrossJoinsId-66]
	_ = x[moveJoinCondsToFilterId-67]
	_ = x[evalFilterId-68]
	_ = x[optimizeDistinctId-69]
	_ = x[hoistOutOfScopeFiltersId-70]
	_ = x[transformJoinApplyId-71]
	_ = x[hoistSelectExistsId-72]
	_ = x[finalizeSubqueriesId-73]
	_ = x[finalizeUnionsId-74]
	_ = x[loadTriggersId-75]
	_ = x[loadEventsId-76]
	_ = x[processTruncateId-77]
	_ = x[resolveAlterColumnId-78]
	_ = x[resolveGeneratorsId-79]
	_ = x[removeUnnecessaryConvertsId-80]
	_ = x[pruneColumnsId-81]
	_ = x[stripTableNameInDefaultsId-82]
	_ = x[foldEmptyJoinsId-83]
	_ = x[optimizeJoinsId-84]
	_ = x[pushdownFiltersId-85]
	_ = x[subqueryIndexesId-86]
	_ = x[pruneTablesId-87]
	_ = x[setJoinScopeLenId-88]
	_ = x[eraseProjectionId-89]
	_ = x[replaceSortPkId-90]
	_ = x[insertTopNId-91]
	_ = x[applyHashInId-92]
	_ = x[resolveInsertRowsId-93]
	_ = x[resolvePreparedInsertId-94]
	_ = x[applyTriggersId-95]
	_ = x[applyProceduresId-96]
	_ = x[assignRoutinesId-97]
	_ = x[modifyUpdateExprsForJoinId-98]
	_ = x[applyRowUpdateAccumulatorsId-99]
	_ = x[wrapWithRollbackId-100]
	_ = x[applyFKsId-101]
	_ = x[validateResolvedId-102]
	_ = x[validateOrderById-103]
	_ = x[validateGroupById-104]
	_ = x[validateSchemaSourceId-105]
	_ = x[validateIndexCreationId-106]
	_ = x[validateOperandsId-107]
	_ = x[validateCaseResultTypesId-108]
	_ = x[validateIntervalUsageId-109]
	_ = x[validateExplodeUsageId-110]
	_ = x[validateSubqueryColumnsId-111]
	_ = x[validateUnionSchemasMatchId-112]
	_ = x[validateAggregationsId-113]
	_ = x[validateDeleteFromId-114]
	_ = x[cacheSubqueryResultsId-115]
	_ = x[cacheSubqueryAliasesInJoinsId-116]
	_ = x[AutocommitId-117]
	_ = x[TrackProcessId-118]
	_ = x[parallelizeId-119]
	_ = x[clearWarningsId-120]
}

const _RuleId_name = "applyDefaultSelectLimitvalidateOffsetAndLimitvalidateStarExpressionsvalidateCreateTablevalidateExprSemresolveVariablesresolveNamedWindowsresolveSetVariablesresolveViewsliftCtesresolveCtesliftRecursiveCtesresolveDatabasesresolveTablesloadStoredProceduresvalidateDropTablespruneDropTablessetTargetSchemasresolveCreateLikeparseColumnDefaultsresolveDropConstraintvalidateDropConstraintloadCheckConstraintsassignCatalogresolveAnalyzeTablesresolveCreateSelectresolveSubqueriessetViewTargetSchemaresolveUnionsresolveDescribeQuerycheckUniqueTableNamesdisambiguateTableFunctionsresolveTableFunctionsresolveDeclarationsresolveColumnDefaultsvalidateColumnDefaultsvalidateCreateTriggervalidateCreateProcedureloadInfoSchemavalidateReadOnlyDatabasevalidateReadOnlyTransactionvalidateDatabaseSetvalidatePrivilegesreresolveTablessetInsertColumnsvalidateJoinComplexityapplyBinlogReplicaControllerresolveNaturalJoinsresolveOrderbyLiteralsresolveFunctionsflattenTableAliasespushdownSortpushdownGroupbyAliasespushdownSubqueryAliasFiltersqualifyColumnsresolveColumnsvalidateCheckConstraintresolveBarewordSetVariablesreplaceCountStarexpandStarstransposeRightJoinsresolveHavingmergeUnionSchemasflattenAggregationExprsreorderProjectionresolveSubqueryExprsreplaceCrossJoinsmoveJoinCondsToFilterevalFilteroptimizeDistincthoistOutOfScopeFilterstransformJoinApplyhoistSelectExistsfinalizeSubqueriesfinalizeUnionsloadTriggersloadEventsprocessTruncateresolveAlterColumnresolveGeneratorsremoveUnnecessaryConvertspruneColumnsstripTableNamesFromColumnDefaultsfoldEmptyJoinsoptimizeJoinspushdownFilterssubqueryIndexespruneTablessetJoinScopeLeneraseProjectionreplaceSortPkinsertTopNapplyHashInresolveInsertRowsresolvePreparedInsertapplyTriggersapplyProceduresassignRoutinesmodifyUpdateExprsForJoinapplyRowUpdateAccumulatorsrollback triggersapplyFKsvalidateResolvedvalidateOrderByvalidateGroupByvalidateSchemaSourcevalidateIndexCreationvalidateOperandsvalidateCaseResultTypesvalidateIntervalUsagevalidateExplodeUsagevalidateSubqueryColumnsvalidateUnionSchemasMatchvalidateAggregationsvalidateDeleteFromcacheSubqueryResultscacheSubqueryAliasesInJoinsaddAutocommitNodetrackProcessparallelizeclearWarnings"

var _RuleId_index = [...]uint16{0, 23, 45, 68, 87, 102, 118, 137, 156, 168, 176, 187, 204, 220, 233, 253, 271, 286, 302, 319, 338, 359, 381, 401, 414, 434, 453, 470, 489, 502, 522, 543, 569, 590, 609, 630, 652, 673, 696, 710, 734, 761, 780, 798, 813, 829, 851, 879, 898, 920, 936, 955, 967, 989, 1017, 1031, 1045, 1068, 1095, 1111, 1122, 1141, 1154, 1171, 1194, 1211, 1231, 1248, 1269, 1279, 1295, 1317, 1335, 1352, 1370, 1384, 1396, 1406, 1421, 1439, 1456, 1481, 1493, 1526, 1540, 1553, 1568, 1583, 1594, 1609, 1624, 1637, 1647, 1658, 1675, 1696, 1709, 1724, 1738, 1762, 1788, 1805, 1813, 1829, 1844, 1859, 1879, 1900, 1916, 1939, 1960, 1980, 2003, 2028, 2048, 2066, 2086, 2113, 2130, 2142, 2153, 2166}

func (i RuleId) String() string {
	if i < 0 || i >= RuleId(len(_RuleId_index)-1) {
		return "RuleId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RuleId_name[_RuleId_index[i]:_RuleId_index[i+1]]
}
